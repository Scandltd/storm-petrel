{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "appsettings.StormPetrel.json file schema",
  "description": "See more details in Configuration Documentation: https://github.com/Scandltd/storm-petrel/blob/main/generator/README.md#configuration",
  "type": "object",
  "definitions": {
    "targetProjectGeneratorExpression": {
      "type": "string",
      "description": "[optional] string, configures the default `Generator`. An expression for the `IGenerator` instance."
    },
    "generatorConfig": {
      "type": [
        "object",
        "null"
      ],
      "description": "[optional] object to configure `Generator` behavior.",
      "properties": {
        "BackuperExpression": {
          "type": [
            "string",
            "null"
          ],
          "description": "[optional] string, instantiates `GeneratorBackuper` by default. An expression for the `IGeneratorBackuper` instance. Set to 'null' to skip creating backup files."
        },
        "DumperExpression": {
          "type": "string",
          "description": "[optional] string, instantiates `GeneratorDumper` by default. An expression for the `IGeneratorDumper` instance."
        },
        "RewriterExpression": {
          "type": "string",
          "description": "[optional] string, instantiates `GeneratorRewriter` by default. An expression for the `IGeneratorRewriter` instance."
        }
      }
    },
    "isDisabled": {
      "type": "boolean",
      "description": "[optional] boolean, false is by default. Indicates whether the generator should create 'StormPetrel' classes. Even if set to 'false', the generator still adds classes like 'IGeneratorDumper', 'GeneratorDumper' to avoid test project compilation failures in the case when custom classes uses them."
    },
    "ignoreFilePathRegex": {
      "type": "string",
      "description": "[optional] string, empty by default. Regular Expression to exclude certain paths from 'StormPetrel' class generation."
    },
    "ignoreInvocationExpressionRegex": {
      "type": "string",
      "description": "[optional] string, empty by default. Regular Expression to detect invocation expressions to not execute StormPetrel rewriting for."
    },
    "testVariablePairConfigs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "ActualVarNameTokenRegex": {
            "type": "string",
            "description": "Default configuration object. Assumes variable pair names like (expected, actual), (myExpected, myActual), (expectedOne, actualOne), (ExpectedTwo, ActualTwo), etc."
          },
          "ExpectedVarNameTokenRegex": {
            "type": "string",
            "description": "Corresponds to the `ActualVarNameTokenRegex` for pairing."
          }
        }
      },
      "description": "[optional] array of objects. Configures naming pairs for actual/expected variables to generate correct expected baselines."
    },
    "serilog": {
      "type": [
        "object",
        "null"
      ],
      "description": "[optional] Logging configuration using Serilog. Defaults to logging warnings to the test project's Logs folder. Set to 'null' to disable logging. Use the '{StormPetrelRootPath}' token to indicate the target test project root path."
    }
  },
  "properties": {
    "TargetProjectGeneratorExpression": {
      "$ref": "#/definitions/targetProjectGeneratorExpression"
    },
    "GeneratorConfig": {
      "$ref": "#/definitions/generatorConfig"
    },
    "IsDisabled": {
      "$ref": "#/definitions/isDisabled"
    },
    "IgnoreFilePathRegex": {
      "$ref": "#/definitions/ignoreFilePathRegex"
    },
    "IgnoreInvocationExpressionRegex": {
      "$ref": "#/definitions/ignoreInvocationExpressionRegex"
    },
    "TestVariablePairConfigs": {
      "$ref": "#/definitions/testVariablePairConfigs"
    }
  },
  "patternProperties": {
    "^(Serilog|serilog)$": {
      "$ref": "#/definitions/serilog"
    }
  }
}
